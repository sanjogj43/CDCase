#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CD_CASE")]
public partial class CDCase_ClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCD_tbl(CD_tbl instance);
  partial void UpdateCD_tbl(CD_tbl instance);
  partial void DeleteCD_tbl(CD_tbl instance);
  partial void InsertLabel_tbl(Label_tbl instance);
  partial void UpdateLabel_tbl(Label_tbl instance);
  partial void DeleteLabel_tbl(Label_tbl instance);
  partial void InsertTrack_tbl(Track_tbl instance);
  partial void UpdateTrack_tbl(Track_tbl instance);
  partial void DeleteTrack_tbl(Track_tbl instance);
  #endregion
	
	public CDCase_ClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CD_CASEConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CDCase_ClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CDCase_ClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CDCase_ClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CDCase_ClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CD_tbl> CD_tbls
	{
		get
		{
			return this.GetTable<CD_tbl>();
		}
	}
	
	public System.Data.Linq.Table<Label_tbl> Label_tbls
	{
		get
		{
			return this.GetTable<Label_tbl>();
		}
	}
	
	public System.Data.Linq.Table<Track_tbl> Track_tbls
	{
		get
		{
			return this.GetTable<Track_tbl>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getdata")]
	public ISingleResult<Track_tbl> getdata()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<Track_tbl>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CD_tbl")]
public partial class CD_tbl : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _cd_id;
	
	private string _cdlbl_id;
	
	private string _cd_title;
	
	private System.Nullable<int> _cd_year;
	
	private string _lbl_title;
	
	private EntitySet<Track_tbl> _Track_tbls;
	
	private EntityRef<Label_tbl> _Label_tbl;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncd_idChanging(int value);
    partial void Oncd_idChanged();
    partial void Oncdlbl_idChanging(string value);
    partial void Oncdlbl_idChanged();
    partial void Oncd_titleChanging(string value);
    partial void Oncd_titleChanged();
    partial void Oncd_yearChanging(System.Nullable<int> value);
    partial void Oncd_yearChanged();
    partial void Onlbl_titleChanging(string value);
    partial void Onlbl_titleChanged();
    #endregion
	
	public CD_tbl()
	{
		this._Track_tbls = new EntitySet<Track_tbl>(new Action<Track_tbl>(this.attach_Track_tbls), new Action<Track_tbl>(this.detach_Track_tbls));
		this._Label_tbl = default(EntityRef<Label_tbl>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cd_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int cd_id
	{
		get
		{
			return this._cd_id;
		}
		set
		{
			if ((this._cd_id != value))
			{
				this.Oncd_idChanging(value);
				this.SendPropertyChanging();
				this._cd_id = value;
				this.SendPropertyChanged("cd_id");
				this.Oncd_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cdlbl_id", DbType="VarChar(50)")]
	public string cdlbl_id
	{
		get
		{
			return this._cdlbl_id;
		}
		set
		{
			if ((this._cdlbl_id != value))
			{
				this.Oncdlbl_idChanging(value);
				this.SendPropertyChanging();
				this._cdlbl_id = value;
				this.SendPropertyChanged("cdlbl_id");
				this.Oncdlbl_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cd_title", DbType="VarChar(50)")]
	public string cd_title
	{
		get
		{
			return this._cd_title;
		}
		set
		{
			if ((this._cd_title != value))
			{
				this.Oncd_titleChanging(value);
				this.SendPropertyChanging();
				this._cd_title = value;
				this.SendPropertyChanged("cd_title");
				this.Oncd_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cd_year", DbType="Int")]
	public System.Nullable<int> cd_year
	{
		get
		{
			return this._cd_year;
		}
		set
		{
			if ((this._cd_year != value))
			{
				this.Oncd_yearChanging(value);
				this.SendPropertyChanging();
				this._cd_year = value;
				this.SendPropertyChanged("cd_year");
				this.Oncd_yearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_title", DbType="VarChar(50)")]
	public string lbl_title
	{
		get
		{
			return this._lbl_title;
		}
		set
		{
			if ((this._lbl_title != value))
			{
				if (this._Label_tbl.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onlbl_titleChanging(value);
				this.SendPropertyChanging();
				this._lbl_title = value;
				this.SendPropertyChanged("lbl_title");
				this.Onlbl_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_tbl_Track_tbl", Storage="_Track_tbls", ThisKey="cd_id", OtherKey="cd_id")]
	public EntitySet<Track_tbl> Track_tbls
	{
		get
		{
			return this._Track_tbls;
		}
		set
		{
			this._Track_tbls.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Label_tbl_CD_tbl", Storage="_Label_tbl", ThisKey="lbl_title", OtherKey="lbl_title", IsForeignKey=true, DeleteRule="CASCADE")]
	public Label_tbl Label_tbl
	{
		get
		{
			return this._Label_tbl.Entity;
		}
		set
		{
			Label_tbl previousValue = this._Label_tbl.Entity;
			if (((previousValue != value) 
						|| (this._Label_tbl.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Label_tbl.Entity = null;
					previousValue.CD_tbls.Remove(this);
				}
				this._Label_tbl.Entity = value;
				if ((value != null))
				{
					value.CD_tbls.Add(this);
					this._lbl_title = value.lbl_title;
				}
				else
				{
					this._lbl_title = default(string);
				}
				this.SendPropertyChanged("Label_tbl");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Track_tbls(Track_tbl entity)
	{
		this.SendPropertyChanging();
		entity.CD_tbl = this;
	}
	
	private void detach_Track_tbls(Track_tbl entity)
	{
		this.SendPropertyChanging();
		entity.CD_tbl = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Label_tbl")]
public partial class Label_tbl : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _lbl_title;
	
	private string _lbl_street;
	
	private string _lbl_city;
	
	private string _lbl_stat;
	
	private System.Nullable<int> _lbl_postcode;
	
	private string _lbl_nation;
	
	private EntitySet<CD_tbl> _CD_tbls;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlbl_titleChanging(string value);
    partial void Onlbl_titleChanged();
    partial void Onlbl_streetChanging(string value);
    partial void Onlbl_streetChanged();
    partial void Onlbl_cityChanging(string value);
    partial void Onlbl_cityChanged();
    partial void Onlbl_statChanging(string value);
    partial void Onlbl_statChanged();
    partial void Onlbl_postcodeChanging(System.Nullable<int> value);
    partial void Onlbl_postcodeChanged();
    partial void Onlbl_nationChanging(string value);
    partial void Onlbl_nationChanged();
    #endregion
	
	public Label_tbl()
	{
		this._CD_tbls = new EntitySet<CD_tbl>(new Action<CD_tbl>(this.attach_CD_tbls), new Action<CD_tbl>(this.detach_CD_tbls));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_title", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string lbl_title
	{
		get
		{
			return this._lbl_title;
		}
		set
		{
			if ((this._lbl_title != value))
			{
				this.Onlbl_titleChanging(value);
				this.SendPropertyChanging();
				this._lbl_title = value;
				this.SendPropertyChanged("lbl_title");
				this.Onlbl_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_street", DbType="VarChar(50)")]
	public string lbl_street
	{
		get
		{
			return this._lbl_street;
		}
		set
		{
			if ((this._lbl_street != value))
			{
				this.Onlbl_streetChanging(value);
				this.SendPropertyChanging();
				this._lbl_street = value;
				this.SendPropertyChanged("lbl_street");
				this.Onlbl_streetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_city", DbType="VarChar(50)")]
	public string lbl_city
	{
		get
		{
			return this._lbl_city;
		}
		set
		{
			if ((this._lbl_city != value))
			{
				this.Onlbl_cityChanging(value);
				this.SendPropertyChanging();
				this._lbl_city = value;
				this.SendPropertyChanged("lbl_city");
				this.Onlbl_cityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_stat", DbType="VarChar(50)")]
	public string lbl_stat
	{
		get
		{
			return this._lbl_stat;
		}
		set
		{
			if ((this._lbl_stat != value))
			{
				this.Onlbl_statChanging(value);
				this.SendPropertyChanging();
				this._lbl_stat = value;
				this.SendPropertyChanged("lbl_stat");
				this.Onlbl_statChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_postcode", DbType="Int")]
	public System.Nullable<int> lbl_postcode
	{
		get
		{
			return this._lbl_postcode;
		}
		set
		{
			if ((this._lbl_postcode != value))
			{
				this.Onlbl_postcodeChanging(value);
				this.SendPropertyChanging();
				this._lbl_postcode = value;
				this.SendPropertyChanged("lbl_postcode");
				this.Onlbl_postcodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lbl_nation", DbType="VarChar(50)")]
	public string lbl_nation
	{
		get
		{
			return this._lbl_nation;
		}
		set
		{
			if ((this._lbl_nation != value))
			{
				this.Onlbl_nationChanging(value);
				this.SendPropertyChanging();
				this._lbl_nation = value;
				this.SendPropertyChanged("lbl_nation");
				this.Onlbl_nationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Label_tbl_CD_tbl", Storage="_CD_tbls", ThisKey="lbl_title", OtherKey="lbl_title")]
	public EntitySet<CD_tbl> CD_tbls
	{
		get
		{
			return this._CD_tbls;
		}
		set
		{
			this._CD_tbls.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CD_tbls(CD_tbl entity)
	{
		this.SendPropertyChanging();
		entity.Label_tbl = this;
	}
	
	private void detach_CD_tbls(CD_tbl entity)
	{
		this.SendPropertyChanging();
		entity.Label_tbl = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Track_tbl")]
public partial class Track_tbl : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _trk_id;
	
	private System.Nullable<int> _trk_num;
	
	private string _trk_title;
	
	private System.Nullable<double> _trk_length;
	
	private System.Nullable<int> _cd_id;
	
	private EntityRef<CD_tbl> _CD_tbl;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontrk_idChanging(int value);
    partial void Ontrk_idChanged();
    partial void Ontrk_numChanging(System.Nullable<int> value);
    partial void Ontrk_numChanged();
    partial void Ontrk_titleChanging(string value);
    partial void Ontrk_titleChanged();
    partial void Ontrk_lengthChanging(System.Nullable<double> value);
    partial void Ontrk_lengthChanged();
    partial void Oncd_idChanging(System.Nullable<int> value);
    partial void Oncd_idChanged();
    #endregion
	
	public Track_tbl()
	{
		this._CD_tbl = default(EntityRef<CD_tbl>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trk_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int trk_id
	{
		get
		{
			return this._trk_id;
		}
		set
		{
			if ((this._trk_id != value))
			{
				this.Ontrk_idChanging(value);
				this.SendPropertyChanging();
				this._trk_id = value;
				this.SendPropertyChanged("trk_id");
				this.Ontrk_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trk_num", DbType="Int")]
	public System.Nullable<int> trk_num
	{
		get
		{
			return this._trk_num;
		}
		set
		{
			if ((this._trk_num != value))
			{
				this.Ontrk_numChanging(value);
				this.SendPropertyChanging();
				this._trk_num = value;
				this.SendPropertyChanged("trk_num");
				this.Ontrk_numChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trk_title", DbType="VarChar(50)")]
	public string trk_title
	{
		get
		{
			return this._trk_title;
		}
		set
		{
			if ((this._trk_title != value))
			{
				this.Ontrk_titleChanging(value);
				this.SendPropertyChanging();
				this._trk_title = value;
				this.SendPropertyChanged("trk_title");
				this.Ontrk_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trk_length", DbType="Float")]
	public System.Nullable<double> trk_length
	{
		get
		{
			return this._trk_length;
		}
		set
		{
			if ((this._trk_length != value))
			{
				this.Ontrk_lengthChanging(value);
				this.SendPropertyChanging();
				this._trk_length = value;
				this.SendPropertyChanged("trk_length");
				this.Ontrk_lengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cd_id", DbType="Int")]
	public System.Nullable<int> cd_id
	{
		get
		{
			return this._cd_id;
		}
		set
		{
			if ((this._cd_id != value))
			{
				if (this._CD_tbl.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Oncd_idChanging(value);
				this.SendPropertyChanging();
				this._cd_id = value;
				this.SendPropertyChanged("cd_id");
				this.Oncd_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CD_tbl_Track_tbl", Storage="_CD_tbl", ThisKey="cd_id", OtherKey="cd_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public CD_tbl CD_tbl
	{
		get
		{
			return this._CD_tbl.Entity;
		}
		set
		{
			CD_tbl previousValue = this._CD_tbl.Entity;
			if (((previousValue != value) 
						|| (this._CD_tbl.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CD_tbl.Entity = null;
					previousValue.Track_tbls.Remove(this);
				}
				this._CD_tbl.Entity = value;
				if ((value != null))
				{
					value.Track_tbls.Add(this);
					this._cd_id = value.cd_id;
				}
				else
				{
					this._cd_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("CD_tbl");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
